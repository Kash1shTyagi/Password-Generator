# Password Generator

A simple password generator application with a **backend** API (TypeScript/Node.js) and a **frontend** UI (React).

## Table of Contents

* [Demo](#demo)
* [Features](#features)
* [Directory Structure](#directory-structure)
* [Tech Stack](#tech-stack)
* [Getting Started](#getting-started)

  * [Prerequisites](#prerequisites)
  * [Clone the Repo](#clone-the-repo)
  * [Install & Run Backend](#install--run-backend)
  * [Install & Run Frontend](#install--run-frontend)
* [Configuration](#configuration)
* [Scripts](#scripts)
* [License](#license)

## Demo

*TODO: Link to live demo or add screenshots.*

## Features

* Generate secure random passwords
* Customizable options (length, character sets)
* REST API to generate passwords programmatically
* Interactive React UI

## Directory Structure

```
/ (root)
├── backend/          # Node.js + TypeScript API
│   ├── src/
│   │   ├── generator.ts    # Password logic
│   │   └── index.ts        # API server entry
│   ├── .gitignore
│   ├── package.json
│   └── tsconfig.json
├── frontend/         # React application
│   ├── public/
│   ├── src/
│   │   ├── assets/
│   │   ├── components/
│   │   ├── App.jsx
│   │   └── main.jsx
│   ├── .gitignore
│   ├── package.json
│   └── vite.config.js
├── LICENSE
└── README.md         # This file
```

## Tech Stack

* **Backend:** Node.js, Express, TypeScript
* **Frontend:** React, Vite, JavaScript
* **Tooling:** ESLint, Prettier, Husky (optional)

## Getting Started

### Prerequisites

* Node.js (>=16)
* npm or yarn

### Clone the Repo

```bash
git clone https://github.com/Kash1shTyagi/Password-Generator.git
cd Password-Generator
```

### Install & Run Backend

```bash
cd backend
npm install
npm run build      # compile TypeScript
npm start          # or `npm run dev` to start in watch mode
```

The API will be available at `http://localhost:4000` (default).

### Install & Run Frontend

```bash
cd ../frontend
npm install
npm run dev
```

Open `http://localhost:3000` in your browser.

## Configuration

* **Backend port:** configure via `PORT` env var (default: 4000)
* **Frontend API URL:** if needed, set `VITE_API_URL` in `.env`

## Scripts

### Root (optional)

* `npm run lint` – Run ESLint on both frontend and backend

### Backend

* `npm run build` – Compile TS to JS
* `npm run dev` – Start dev server with hot-reload
* `npm run start` – Run compiled code

### Frontend

* `npm run dev` – Start Vite dev server
* `npm run build` – Build for production
* `npm run preview` – Preview production build

## License

MIT © \[Your Name]
